const html = '<h1 id="form-basics" tabindex="-1">Form Basics <a class="header-anchor" href="#form-basics" aria-hidden="true">#</a></h1>\n<h2 id="loading-forms" tabindex="-1">Loading Forms <a class="header-anchor" href="#loading-forms" aria-hidden="true">#</a></h2>\n<p>There are 2 basic methods for loading in forms.</p>\n<ol>\n<li>\n<p>Server Side Loading: Pass in the form name only and this plugin will make a request to the server to get the form data.</p>\n</li>\n<li>\n<p>Client Side Loading: Pass in the full form object (either Input or Action Form). No server side request is needed. This feature allows you to load the form object eg: form loads from Laravel View and is passed as data.</p>\n</li>\n</ol>\n<h2 id="form-types" tabindex="-1">Form Types <a class="header-anchor" href="#form-types" aria-hidden="true">#</a></h2>\n<p>This plugin defines forms in 2 ways - Input and Action.</p>\n<h3 id="_1-input-forms" tabindex="-1">1. Input Forms <a class="header-anchor" href="#_1-input-forms" aria-hidden="true">#</a></h3>\n<p>Input Forms are your typical user forms that require some sort of input, like a login page, general CRUD actions etc. Input Forms can utilize textfields, autocompeletes, checkboxes, radio groups etc.</p>\n<h3 id="_2-action-forms" tabindex="-1">2. Action Forms <a class="header-anchor" href="#_2-action-forms" aria-hidden="true">#</a></h3>\n<p>Action Forms are used when you need to have an action performed, this is typically through a set of buttons or icons.</p>\n<p>For more information about how forms are constructed, check out the parent package <a href="https://packagist.org/packages/plustime-it/laravel-easyforms" target="_blank">Laravel EasyForms</a></p>\n<h2 id="form-events" tabindex="-1">Form Events <a class="header-anchor" href="#form-events" aria-hidden="true">#</a></h2>\n<p>The form loader triggers multiple events:</p>\n<div class="div data-table"><table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>@loaded</td>\n<td>triggered when form has successfully loaded.</td>\n</tr>\n<tr>\n<td>@loading</td>\n<td>triggered when the form is in a loading state (including processing)</td>\n</tr>\n<tr>\n<td>@results</td>\n<td>triggered when the form has results from processing.</td>\n</tr>\n<tr>\n<td>@reset_form</td>\n<td>triggered when the form has been successfully reset (this comes from the reset button)</td>\n</tr>\n<tr>\n<td>@cancelled</td>\n<td>triggered when the form has been cancelled (this comes from the cancel button)</td>\n</tr>\n<tr>\n<td>@updated</td>\n<td>triggered when the field values have been updated.</td>\n</tr>\n</tbody>\n</table>\n</div>\n';
const frontmatter = { "group": "forms", "icon": "carbon:bookmark", "title": "Form Basics" };
const relativePath = "src/docs/FormBasics.story.md";

export { frontmatter, html, relativePath };
